{"generatedAt":1738152580534,"generateTime":236,"contents":[{"_path":"/documentation","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"useNetFlux Documentation","description":"This useNetFlux composable provides an abstraction for making API requests with additional features such as retries, caching, timeouts, cancellation, and logging. It also includes a global configuration that can be customized.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"usenetflux-documentation"},"children":[{"type":"text","value":"useNetFlux Documentation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":" composable provides an abstraction for making API requests with additional features such as retries, caching, timeouts, cancellation, and logging. It also includes a global configuration that can be customized."}]},{"type":"element","tag":"h2","props":{"id":"table-of-contents"},"children":[{"type":"text","value":"Table of Contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#installation"},"children":[{"type":"text","value":"Installation"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#basic-usage"},"children":[{"type":"text","value":"Basic Usage"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#api-request-structure"},"children":[{"type":"text","value":"API Request Structure"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#methods"},"children":[{"type":"text","value":"Methods"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#executecall"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"executeCall"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#options-for-executecall"},"children":[{"type":"text","value":"Options for "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"executeCall"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#global-configuration"},"children":[{"type":"text","value":"Global Configuration"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#updateglobalconfig"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"updateGlobalConfig"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#features"},"children":[{"type":"text","value":"Options"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#retries"},"children":[{"type":"text","value":"Retries"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#timeouts"},"children":[{"type":"text","value":"Timeouts"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#caching"},"children":[{"type":"text","value":"Caching"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#request-cancellation"},"children":[{"type":"text","value":"Request Cancellation"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#logging"},"children":[{"type":"text","value":"Logging"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#logging-behavior"},"children":[{"type":"text","value":"Logging Behavior"}]}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#example-usage"},"children":[{"type":"text","value":"Example Usage"}]}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":", first import the composable into your Vue 3/Nuxt 3 project."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I will add support for other JS/TS applications later in the future as a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"npm"}]},{"type":"text","value":" package."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At the moment, it is tested and works the best with NUXT 3 applications."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"import { useNetFlux } from \"./netFlux\";\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import { useNetFlux } from \"./netFlux\";\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"basic-usage"},"children":[{"type":"text","value":"Basic Usage"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":" composable allows you to make API calls with customizable options such as retries, timeouts, cache handling, and more."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const { executeCall, updateGlobalConfig } = useNetFlux();\n\n// Example of making a GET request\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"<https://api.example.com/data>\",\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const { executeCall, updateGlobalConfig } = useNetFlux();\n\n// Example of making a GET request\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"<https://api.example.com/data>\",\n  },\n});\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"api-request-structure"},"children":[{"type":"text","value":"API Request Structure"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"apiRequest"}]},{"type":"text","value":" object defines the structure of the API request."}]},{"type":"element","tag":"h3","props":{"id":"structure"},"children":[{"type":"text","value":"Structure"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"interface ApiRequest {\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\"; // HTTP method\n\n  endpoint: string; // API endpoint\n\n  headers?: Record<string, string>; // Optional headers\n\n  queryParams?: Record<string, string | number>; // Optional query parameters\n\n  body?: any; // Optional body for POST, PUT, etc.\n}\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"interface ApiRequest {\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\"; // HTTP method\n\n  endpoint: string; // API endpoint\n\n  headers?: Record<string, string>; // Optional headers\n\n  queryParams?: Record<string, string | number>; // Optional query parameters\n\n  body?: any; // Optional body for POST, PUT, etc.\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"example"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const apiRequest = {\n  method: \"POST\",\n\n  endpoint: \"<https://api.example.com/create>\",\n\n  headers: {\n    Authorization: \"Bearer token\",\n  },\n\n  body: {\n    name: \"New Item\",\n\n    description: \"This is a new item\",\n  },\n};\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const apiRequest = {\n  method: \"POST\",\n\n  endpoint: \"<https://api.example.com/create>\",\n\n  headers: {\n    Authorization: \"Bearer token\",\n  },\n\n  body: {\n    name: \"New Item\",\n\n    description: \"This is a new item\",\n  },\n};\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"options-for-executecall"},"children":[{"type":"text","value":"Options for "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"executeCall"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"executeCall"}]},{"type":"text","value":" function accepts the following options:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"interface ExecuteCallParams {\n  apiRequest: ApiRequest; // The API request object\n\n  async?: boolean; // Run asynchronously without waiting for the ongoing request\n\n  override?: boolean; // Override any ongoing request for the same endpoint\n\n  retries?: number; // Number of retry attempts on failure (default: 3)\n\n  retryDelay?: number; // Delay between retries in milliseconds (default: 1000ms)\n\n  cancellationToken?: AbortController; // Custom cancellation token\n\n  timeout?: number; // Request timeout in milliseconds (default: 5000ms)\n\n  cacheDuration?: number; // Cache duration in milliseconds (default: 60000ms)\n\n  skipCache?: boolean; // Skip cache and force a fresh request (default: false)\n}\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"interface ExecuteCallParams {\n  apiRequest: ApiRequest; // The API request object\n\n  async?: boolean; // Run asynchronously without waiting for the ongoing request\n\n  override?: boolean; // Override any ongoing request for the same endpoint\n\n  retries?: number; // Number of retry attempts on failure (default: 3)\n\n  retryDelay?: number; // Delay between retries in milliseconds (default: 1000ms)\n\n  cancellationToken?: AbortController; // Custom cancellation token\n\n  timeout?: number; // Request timeout in milliseconds (default: 5000ms)\n\n  cacheDuration?: number; // Cache duration in milliseconds (default: 60000ms)\n\n  skipCache?: boolean; // Skip cache and force a fresh request (default: false)\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"example-1"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"executeCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"<https://api.example.com/data>\",\n  },\n\n  retries: 5,\n\n  timeout: 10000,\n\n  cacheDuration: 120000, // Cache for 2 minutes\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"executeCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"<https://api.example.com/data>\",\n  },\n\n  retries: 5,\n\n  timeout: 10000,\n\n  cacheDuration: 120000, // Cache for 2 minutes\n});\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"global-configuration"},"children":[{"type":"text","value":"Global Configuration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":" has a global configuration that can be updated using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"updateGlobalConfig"}]},{"type":"text","value":". This allows setting default behaviors for all API calls."}]},{"type":"element","tag":"h3","props":{"id":"global-config-fields"},"children":[{"type":"text","value":"Global Config Fields"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const defaultConfig = ref({\n  retries: 3, // Default number of retries (3 attempts)\n\n  retryDelay: 1000, // Default retry delay (1 second)\n\n  timeout: 5000, // Default timeout (5 seconds)\n\n  cacheDuration: 60000, // Default cache duration (1 minute)\n\n  async: false, // Default async behavior (wait for ongoing request)\n\n  override: false, // Default override behavior (do not override ongoing request)\n\n  skipCache: false, // Default skip cache (false)\n\n  logging: true, // Enable logging globally (true)\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const defaultConfig = ref({\n  retries: 3, // Default number of retries (3 attempts)\n\n  retryDelay: 1000, // Default retry delay (1 second)\n\n  timeout: 5000, // Default timeout (5 seconds)\n\n  cacheDuration: 60000, // Default cache duration (1 minute)\n\n  async: false, // Default async behavior (wait for ongoing request)\n\n  override: false, // Default override behavior (do not override ongoing request)\n\n  skipCache: false, // Default skip cache (false)\n\n  logging: true, // Enable logging globally (true)\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"example-updating-global-config"},"children":[{"type":"text","value":"Example: Updating Global Config"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"updateGlobalConfig({\n  retries: 2,\n\n  timeout: 10000, // 10 seconds timeout\n\n  logging: true, // Enable logging\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"updateGlobalConfig({\n  retries: 2,\n\n  timeout: 10000, // 10 seconds timeout\n\n  logging: true, // Enable logging\n});\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"features"},"children":[{"type":"text","value":"Features"}]},{"type":"element","tag":"h3","props":{"id":"retries"},"children":[{"type":"text","value":"Retries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":" supports automatic retries when a network request fails. The number of retries and delay between retries can be configured."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Global default"}]},{"type":"text","value":": 3 retries with a 1-second delay."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Custom per request"}]},{"type":"text","value":": You can override the global retries for individual requests."}]}]},{"type":"element","tag":"h3","props":{"id":"timeouts"},"children":[{"type":"text","value":"Timeouts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can set a timeout for requests. If the request takes longer than the specified time, it will be aborted."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Global default"}]},{"type":"text","value":": 5 seconds."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Custom per request"}]},{"type":"text","value":": You can override the global timeout for individual requests."}]}]},{"type":"element","tag":"h3","props":{"id":"caching"},"children":[{"type":"text","value":"Caching"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Responses can be cached to prevent redundant network requests within a specific time frame."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Global default"}]},{"type":"text","value":": Cached for 1 minute."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Custom per request"}]},{"type":"text","value":": Set "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"cacheDuration"}]},{"type":"text","value":" or skip cache by setting "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"skipCache: true"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h3","props":{"id":"request-cancellation"},"children":[{"type":"text","value":"Request Cancellation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Abort controllers can be used to cancel ongoing requests. You can pass a custom "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"AbortController"}]},{"type":"text","value":" or let "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":" handle cancellation with timeouts."}]},{"type":"element","tag":"h3","props":{"id":"logging"},"children":[{"type":"text","value":"Logging"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Logging helps in monitoring the network stack’s behavior, such as request retries, errors, caching, and other events."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Global Config"}]},{"type":"text","value":": Enable or disable logging globally."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Log Levels"}]},{"type":"text","value":": "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"info"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"warn"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"error"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"methods"},"children":[{"type":"text","value":"Methods"}]},{"type":"element","tag":"h3","props":{"id":"executecall"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"executeCall"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Performs the API call with retries, caching, timeouts, and other options."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"async function executeCall({\n  apiRequest,\n\n  async,\n\n  override,\n\n  retries,\n\n  retryDelay,\n\n  cancellationToken,\n\n  timeout,\n\n  cacheDuration,\n\n  skipCache,\n}: ExecuteCallParams): Promise<any>;\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"async function executeCall({\n  apiRequest,\n\n  async,\n\n  override,\n\n  retries,\n\n  retryDelay,\n\n  cancellationToken,\n\n  timeout,\n\n  cacheDuration,\n\n  skipCache,\n}: ExecuteCallParams): Promise<any>;\n"}]}]},{"type":"element","tag":"h3","props":{"id":"updateglobalconfig"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"updateGlobalConfig"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Updates the global configuration of the network stack."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"function updateGlobalConfig(\n  newConfig: Partial<typeof defaultConfig.value>\n): void;\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function updateGlobalConfig(\n  newConfig: Partial<typeof defaultConfig.value>\n): void;\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"logging-behavior"},"children":[{"type":"text","value":"Logging Behavior"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Logging helps trace the flow of requests and catch potential issues during retries, caching, or timeouts. The logging system provides three levels:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"info"}]},{"type":"text","value":": General information about requests, retries, and caching."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"warn"}]},{"type":"text","value":": Warnings such as retries or request aborts."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"error"}]},{"type":"text","value":": Errors encountered during network requests."}]}]},{"type":"element","tag":"h3","props":{"id":"example-log-output"},"children":[{"type":"text","value":"Example Log Output"}]},{"type":"element","tag":"pre","props":{"className":["language-log"],"code":"\n[2024-10-12T10:00:00.000Z] INFO: Starting API call { url: '<https://api.example.com/data>', method: 'GET' }\n\n[2024-10-12T10:00:01.000Z] WARN: Retrying... Attempt 2 { endpoint: '<https://api.example.com/data>' }\n\n[2024-10-12T10:00:03.000Z] INFO: Response cached for: <https://api.example.com/data> { cacheDuration: 60000 }\n\n[2024-10-12T10:00:05.000Z] ERROR: API call failed for: <https://api.example.com/data> { error: 'Network error' }\n\n","language":"log","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\n[2024-10-12T10:00:00.000Z] INFO: Starting API call { url: '<https://api.example.com/data>', method: 'GET' }\n\n[2024-10-12T10:00:01.000Z] WARN: Retrying... Attempt 2 { endpoint: '<https://api.example.com/data>' }\n\n[2024-10-12T10:00:03.000Z] INFO: Response cached for: <https://api.example.com/data> { cacheDuration: 60000 }\n\n[2024-10-12T10:00:05.000Z] ERROR: API call failed for: <https://api.example.com/data> { error: 'Network error' }\n\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"example-usage"},"children":[{"type":"text","value":"Example Usage"}]},{"type":"element","tag":"h3","props":{"id":"simple-get-request"},"children":[{"type":"text","value":"Simple GET Request"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const { executeCall } = useNetFlux();\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"<https://api.example.com/data>\",\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const { executeCall } = useNetFlux();\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"<https://api.example.com/data>\",\n  },\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"post-request-with-retries-and-timeout"},"children":[{"type":"text","value":"POST Request with Retries and Timeout"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"executeCall({\n  apiRequest: {\n    method: \"POST\",\n\n    endpoint: \"<https://api.example.com/create>\",\n\n    body: { name: \"New Item\" },\n  },\n\n  retries: 5, // Retry up to 5 times\n\n  retryDelay: 2000, // 2-second delay between retries\n\n  timeout: 10000, // 10-second timeout\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"executeCall({\n  apiRequest: {\n    method: \"POST\",\n\n    endpoint: \"<https://api.example.com/create>\",\n\n    body: { name: \"New Item\" },\n  },\n\n  retries: 5, // Retry up to 5 times\n\n  retryDelay: 2000, // 2-second delay between retries\n\n  timeout: 10000, // 10-second timeout\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"request-with-custom-cancellation-token"},"children":[{"type":"text","value":"Request with Custom Cancellation Token"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const controller = new AbortController();\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"<https://api.example.com/data>\",\n  },\n\n  cancellationToken: controller, // Use a custom token to cancel the request\n});\n\n// Cancel the request after 2 seconds\n\nsetTimeout(() => controller.abort(), 2000);\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const controller = new AbortController();\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"<https://api.example.com/data>\",\n  },\n\n  cancellationToken: controller, // Use a custom token to cancel the request\n});\n\n// Cancel the request after 2 seconds\n\nsetTimeout(() => controller.abort(), 2000);\n"}]}]},{"type":"element","tag":"h3","props":{"id":"updating-global-configuration"},"children":[{"type":"text","value":"Updating Global Configuration"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const { updateGlobalConfig } = useNetFlux();\n\nupdateGlobalConfig({\n  retries: 2, // Update global retries to 2\n\n  logging: true, // Enable logging globally\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const { updateGlobalConfig } = useNetFlux();\n\nupdateGlobalConfig({\n  retries: 2, // Update global retries to 2\n\n  logging: true, // Enable logging globally\n});\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"table-of-contents","depth":2,"text":"Table of Contents"},{"id":"installation","depth":2,"text":"Installation"},{"id":"basic-usage","depth":2,"text":"Basic Usage"},{"id":"api-request-structure","depth":2,"text":"API Request Structure","children":[{"id":"structure","depth":3,"text":"Structure"},{"id":"example","depth":3,"text":"Example"}]},{"id":"options-for-executecall","depth":2,"text":"Options for executeCall","children":[{"id":"example-1","depth":3,"text":"Example"}]},{"id":"global-configuration","depth":2,"text":"Global Configuration","children":[{"id":"global-config-fields","depth":3,"text":"Global Config Fields"},{"id":"example-updating-global-config","depth":3,"text":"Example: Updating Global Config"}]},{"id":"features","depth":2,"text":"Features","children":[{"id":"retries","depth":3,"text":"Retries"},{"id":"timeouts","depth":3,"text":"Timeouts"},{"id":"caching","depth":3,"text":"Caching"},{"id":"request-cancellation","depth":3,"text":"Request Cancellation"},{"id":"logging","depth":3,"text":"Logging"}]},{"id":"methods","depth":2,"text":"Methods","children":[{"id":"executecall","depth":3,"text":"executeCall"},{"id":"updateglobalconfig","depth":3,"text":"updateGlobalConfig"}]},{"id":"logging-behavior","depth":2,"text":"Logging Behavior","children":[{"id":"example-log-output","depth":3,"text":"Example Log Output"}]},{"id":"example-usage","depth":2,"text":"Example Usage","children":[{"id":"simple-get-request","depth":3,"text":"Simple GET Request"},{"id":"post-request-with-retries-and-timeout","depth":3,"text":"POST Request with Retries and Timeout"},{"id":"request-with-custom-cancellation-token","depth":3,"text":"Request with Custom Cancellation Token"},{"id":"updating-global-configuration","depth":3,"text":"Updating Global Configuration"}]}]}},"_type":"markdown","_id":"content:documentation.md","_source":"content","_file":"documentation.md","_stem":"documentation","_extension":"md"},{"_path":"/features","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Features","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"features"},"children":[{"type":"text","value":"Features"}]},{"type":"element","tag":"h1","props":{"id":"usenetflux-a-powerful-composable-for-api-requests"},"children":[{"type":"text","value":"useNetFlux - A Powerful Composable for API Requests"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":" is a versatile Vue 3/Nuxt 3 composable that abstracts and enhances API requests with built-in features like retries, caching, timeouts, request cancellation, and logging. It is designed to handle common challenges in API requests while providing a flexible and configurable structure."}]},{"type":"element","tag":"h2","props":{"id":"key-features"},"children":[{"type":"text","value":"Key Features"}]},{"type":"element","tag":"h3","props":{"id":"_1-retries"},"children":[{"type":"text","value":"1. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Retries"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Automatically retry failed requests based on configurable settings."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Global Default"}]},{"type":"text","value":": 3 retries"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Customizable"}]},{"type":"text","value":": Set retries and retry delay per request"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Example"}]},{"type":"text","value":":"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"executeCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n\n  retries: 5, // Retry up to 5 times\n\n  retryDelay: 2000, // 2-second delay between retries\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"executeCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n\n  retries: 5, // Retry up to 5 times\n\n  retryDelay: 2000, // 2-second delay between retries\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_2-timeouts"},"children":[{"type":"text","value":"2. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Timeouts"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Set time limits on API requests to avoid indefinite waiting."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Global Default"}]},{"type":"text","value":": 5 seconds"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Customizable"}]},{"type":"text","value":": Timeout can be set per request"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Example"}]},{"type":"text","value":":"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"executeCall({\n  apiRequest: {\n    method: \"POST\",\n\n    endpoint: \"https://api.example.com/create\",\n\n    timeout: 10000, // 10-second timeout\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"executeCall({\n  apiRequest: {\n    method: \"POST\",\n\n    endpoint: \"https://api.example.com/create\",\n\n    timeout: 10000, // 10-second timeout\n  },\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_3-caching"},"children":[{"type":"text","value":"3. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Caching"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cache responses for a specified duration to minimize redundant network calls."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Global Default"}]},{"type":"text","value":": Cached for 1 minute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Customizable"}]},{"type":"text","value":": Set "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"cacheDuration"}]},{"type":"text","value":" per request"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Skip Cache"}]},{"type":"text","value":": Force bypassing cache by setting "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"skipCache: true"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Example"}]},{"type":"text","value":":"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"executeCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n\n  cacheDuration: 120000, // Cache for 2 minutes\n\n  skipCache: false, // Enable cache by default\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"executeCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n\n  cacheDuration: 120000, // Cache for 2 minutes\n\n  skipCache: false, // Enable cache by default\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_4-request-cancellation"},"children":[{"type":"text","value":"4. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Request Cancellation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Abort ongoing requests using an "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"AbortController"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Auto-Generated"}]},{"type":"text","value":": Timeout automatically triggers request cancellation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Custom"}]},{"type":"text","value":": Pass your own "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"AbortController"}]},{"type":"text","value":" to manually cancel requests"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Example"}]},{"type":"text","value":":"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const controller = new AbortController();\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n\n  cancellationToken: controller,\n});\n\n// Cancel the request after 2 seconds\n\nsetTimeout(() => controller.abort(), 2000);\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const controller = new AbortController();\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n\n  cancellationToken: controller,\n});\n\n// Cancel the request after 2 seconds\n\nsetTimeout(() => controller.abort(), 2000);\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_5-global-configuration"},"children":[{"type":"text","value":"5. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Global Configuration"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Define global defaults for retries, timeouts, caching, and more."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Flexible"}]},{"type":"text","value":": Update default settings for all requests"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Example"}]},{"type":"text","value":":"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"updateGlobalConfig({\n  retries: 5, // Set global retries to 5\n\n  timeout: 15000, // Set global timeout to 15 seconds\n\n  logging: true, // Enable logging globally\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"updateGlobalConfig({\n  retries: 5, // Set global retries to 5\n\n  timeout: 15000, // Set global timeout to 15 seconds\n\n  logging: true, // Enable logging globally\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_6-logging"},"children":[{"type":"text","value":"6. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Logging"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get real-time logging information about request behavior."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Global Setting"}]},{"type":"text","value":": Enable or disable logging in the global configuration"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Log Levels"}]},{"type":"text","value":": "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"info"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"warn"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"error"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Example"}]},{"type":"text","value":" log output:"}]}]},{"type":"element","tag":"pre","props":{"className":["language-log"],"code":"\n[INFO]: Starting API call { url: 'https://api.example.com/data', method: 'GET' }\n\n[WARN]: Retrying... Attempt 2 { endpoint: 'https://api.example.com/data' }\n\n[ERROR]: API call failed { endpoint: 'https://api.example.com/data', error: 'Timeout' }\n","language":"log","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\n[INFO]: Starting API call { url: 'https://api.example.com/data', method: 'GET' }\n\n[WARN]: Retrying... Attempt 2 { endpoint: 'https://api.example.com/data' }\n\n[ERROR]: API call failed { endpoint: 'https://api.example.com/data', error: 'Timeout' }\n"}]}]},{"type":"element","tag":"h2","props":{"id":"methods"},"children":[{"type":"text","value":"Methods"}]},{"type":"element","tag":"h3","props":{"id":"executecall"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"executeCall"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The core method to make API requests with enhanced features like retries, caching, timeouts, and logging."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"async function executeCall({\n  apiRequest,\n\n  retries = 3,\n\n  retryDelay = 1000,\n\n  timeout = 5000,\n\n  cacheDuration = 60000,\n\n  skipCache = false,\n\n  cancellationToken,\n\n  async = false,\n\n  override = false,\n}: ExecuteCallParams): Promise<any>;\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"async function executeCall({\n  apiRequest,\n\n  retries = 3,\n\n  retryDelay = 1000,\n\n  timeout = 5000,\n\n  cacheDuration = 60000,\n\n  skipCache = false,\n\n  cancellationToken,\n\n  async = false,\n\n  override = false,\n}: ExecuteCallParams): Promise<any>;\n"}]}]},{"type":"element","tag":"h3","props":{"id":"updateglobalconfig"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"updateGlobalConfig"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Modify global configurations for all requests."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"function updateGlobalConfig(\n  newConfig: Partial<typeof defaultConfig.value>\n): void;\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function updateGlobalConfig(\n  newConfig: Partial<typeof defaultConfig.value>\n): void;\n"}]}]},{"type":"element","tag":"h3","props":{"id":"example-updating-global-config"},"children":[{"type":"text","value":"Example: Updating Global Config"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"updateGlobalConfig({\n  retries: 4, // Update retries globally to 4\n\n  cacheDuration: 300000, // Cache for 5 minutes\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"updateGlobalConfig({\n  retries: 4, // Update retries globally to 4\n\n  cacheDuration: 300000, // Cache for 5 minutes\n});\n"}]}]},{"type":"element","tag":"h2","props":{"id":"api-request-structure"},"children":[{"type":"text","value":"API Request Structure"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"apiRequest"}]},{"type":"text","value":" object defines the structure of the API call, which includes the HTTP method, endpoint, headers, and body."}]},{"type":"element","tag":"h3","props":{"id":"structure"},"children":[{"type":"text","value":"Structure:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"interface ApiRequest {\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\"; // HTTP method\n\n  endpoint: string; // API endpoint\n\n  headers?: Record<string, string>; // Optional headers\n\n  queryParams?: Record<string, string | number>; // Optional query parameters\n\n  body?: any; // Optional body for POST, PUT, etc.\n}\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"interface ApiRequest {\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\"; // HTTP method\n\n  endpoint: string; // API endpoint\n\n  headers?: Record<string, string>; // Optional headers\n\n  queryParams?: Record<string, string | number>; // Optional query parameters\n\n  body?: any; // Optional body for POST, PUT, etc.\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"example"},"children":[{"type":"text","value":"Example:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const apiRequest = {\n  method: \"POST\",\n\n  endpoint: \"https://api.example.com/create\",\n\n  headers: {\n    Authorization: \"Bearer token\",\n  },\n\n  body: {\n    name: \"New Item\",\n\n    description: \"This is a new item\",\n  },\n};\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const apiRequest = {\n  method: \"POST\",\n\n  endpoint: \"https://api.example.com/create\",\n\n  headers: {\n    Authorization: \"Bearer token\",\n  },\n\n  body: {\n    name: \"New Item\",\n\n    description: \"This is a new item\",\n  },\n};\n"}]}]},{"type":"element","tag":"h2","props":{"id":"example-usage"},"children":[{"type":"text","value":"Example Usage"}]},{"type":"element","tag":"h3","props":{"id":"simple-get-request"},"children":[{"type":"text","value":"Simple GET Request"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"executeCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"executeCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"post-request-with-retries-and-timeout"},"children":[{"type":"text","value":"POST Request with Retries and Timeout"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"executeCall({\n  apiRequest: {\n    method: \"POST\",\n\n    endpoint: \"https://api.example.com/create\",\n\n    body: { name: \"New Item\" },\n  },\n\n  retries: 5, // Retry up to 5 times\n\n  retryDelay: 2000, // 2-second delay between retries\n\n  timeout: 10000, // 10-second timeout\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"executeCall({\n  apiRequest: {\n    method: \"POST\",\n\n    endpoint: \"https://api.example.com/create\",\n\n    body: { name: \"New Item\" },\n  },\n\n  retries: 5, // Retry up to 5 times\n\n  retryDelay: 2000, // 2-second delay between retries\n\n  timeout: 10000, // 10-second timeout\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"request-with-custom-cancellation-token"},"children":[{"type":"text","value":"Request with Custom Cancellation Token"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const controller = new AbortController();\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n\n  cancellationToken: controller, // Use a custom token to cancel the request\n});\n\n// Cancel the request after 2 seconds\n\nsetTimeout(() => controller.abort(), 2000);\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const controller = new AbortController();\n\nexecuteCall({\n  apiRequest: {\n    method: \"GET\",\n\n    endpoint: \"https://api.example.com/data\",\n  },\n\n  cancellationToken: controller, // Use a custom token to cancel the request\n});\n\n// Cancel the request after 2 seconds\n\nsetTimeout(() => controller.abort(), 2000);\n"}]}]},{"type":"element","tag":"h3","props":{"id":"updating-global-configuration"},"children":[{"type":"text","value":"Updating Global Configuration"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"updateGlobalConfig({\n  retries: 2, // Update global retries to 2\n\n  logging: true, // Enable logging globally\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"updateGlobalConfig({\n  retries: 2, // Update global retries to 2\n\n  logging: true, // Enable logging globally\n});\n"}]}]},{"type":"element","tag":"h2","props":{"id":"conclusion"},"children":[{"type":"text","value":"Conclusion"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":" composable enhances the process of making API requests by providing support for retries, timeouts, caching, cancellation, and logging. It is flexible, with both per-request and global configurations available, making it a powerful tool for handling network requests in your Vue 3/Nuxt 3 applications."}]},{"type":"element","tag":"pre","props":{"className":["language-text"],"code":"\nThis markdown file contains a detailed description of the package and covers all features introduced in `useNetFlux`.\n\n","language":"text","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\nThis markdown file contains a detailed description of the package and covers all features introduced in `useNetFlux`.\n\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"key-features","depth":2,"text":"Key Features","children":[{"id":"_1-retries","depth":3,"text":"1. Retries"},{"id":"_2-timeouts","depth":3,"text":"2. Timeouts"},{"id":"_3-caching","depth":3,"text":"3. Caching"},{"id":"_4-request-cancellation","depth":3,"text":"4. Request Cancellation"},{"id":"_5-global-configuration","depth":3,"text":"5. Global Configuration"},{"id":"_6-logging","depth":3,"text":"6. Logging"}]},{"id":"methods","depth":2,"text":"Methods","children":[{"id":"executecall","depth":3,"text":"executeCall"},{"id":"updateglobalconfig","depth":3,"text":"updateGlobalConfig"},{"id":"example-updating-global-config","depth":3,"text":"Example: Updating Global Config"}]},{"id":"api-request-structure","depth":2,"text":"API Request Structure","children":[{"id":"structure","depth":3,"text":"Structure:"},{"id":"example","depth":3,"text":"Example:"}]},{"id":"example-usage","depth":2,"text":"Example Usage","children":[{"id":"simple-get-request","depth":3,"text":"Simple GET Request"},{"id":"post-request-with-retries-and-timeout","depth":3,"text":"POST Request with Retries and Timeout"},{"id":"request-with-custom-cancellation-token","depth":3,"text":"Request with Custom Cancellation Token"},{"id":"updating-global-configuration","depth":3,"text":"Updating Global Configuration"}]},{"id":"conclusion","depth":2,"text":"Conclusion"}]}},"_type":"markdown","_id":"content:features.md","_source":"content","_file":"features.md","_stem":"features","_extension":"md"},{"_path":"/indext","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"useNetFlux","description":"Designed, developed and delivered with <3 by Anirudh Rath | dh00mk3tu","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"usenetflux"},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Designed, developed and delivered with <3 by Anirudh Rath | dh00mk3tu"}]},{"type":"element","tag":"h2","props":{"id":"why-did-i-make-this"},"children":[{"type":"text","value":"Why did I make this?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Jumping onto any new technology, framework or library tto build apps etc is a challenge in itself. After a certain while, you hit the blocker that how do we make API calls in this environment; because naturally you have to consume data from the network at some point. Eventually you end up watching tutorials and reading documentation, but there is still no structure to it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This composable helps to provide you with that structure."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'm calling it a composable in general and not just in the terms of NUXT. It is a utility method for you that provides you a with very granular and precise control over your network calls."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's discuss what's there to offer and you'll know whether you need this or not by looking at this quick example."}]},{"type":"element","tag":"h3","props":{"id":"features"},"children":[{"type":"element","tag":"a","props":{"href":"/features"},"children":[{"type":"text","value":"Features"}]}]},{"type":"element","tag":"h3","props":{"id":"documentation"},"children":[{"type":"element","tag":"a","props":{"href":"/documentation"},"children":[{"type":"text","value":"Documentation"}]}]},{"type":"element","tag":"h3","props":{"id":"usenetflux-playground"},"children":[{"type":"element","tag":"a","props":{"href":"/playground"},"children":[{"type":"text","value":"useNetFlux - Playground"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"quick-example"},"children":[{"type":"text","value":"Quick Example"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":" can make network calls for you, in a clean and intuitive manner. It can help you structure your API calls, provide you with logs when you need them and solid control of each individual call as well. Let's start by making a normal API call."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After importing "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux()"}]},{"type":"text","value":", you'll find that it exports a method called "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"executeCall"}]},{"type":"text","value":" . This method allows us to make our API calls and provides us with all the options that are required for granular control over our call."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Importing Method","src":"/importingmethod.png"},"children":[]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"const { executeCall } = useNetFlux();\n\nconst result = await executeCall({\n  apiRequest: {\n    method: 'GET',\n    endpoint: '/api/products',\n  },\n});\n","filename":"api_call.ts","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const { executeCall } = useNetFlux();\n\nconst result = await executeCall({\n  apiRequest: {\n    method: 'GET',\n    endpoint: '/api/products',\n  },\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"executeCall"}]},{"type":"text","value":" accepts an argument which is an object. Now this object accepts a number a typed arguments, as shown in the image below."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Screenshot from 2024-10-12 18-45-22.png","src":"/22.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, there is one "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"param"}]},{"type":"text","value":" which is required, while rest are optional."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"apiRequest"}]},{"type":"text","value":" is a required parameter which is an object, and this object also requires certain mandatory parameters. Let's use it and see what options are available to us."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Screenshot from 2024-10-12 18-53-14.png","src":"/14.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Notice, that the required keys have pretty self explanatory names, let's add these required parameters."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Screenshot_20241012_192602.png","src":"/Screenshot_20241012_192602.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We can select the type of our API method, and specify the API endpoint."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now all you have to do is play around with the result that you get from the endpoint."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Head over to "},{"type":"element","tag":"a","props":{"href":"/features"},"children":[{"type":"text","value":"Features"}]},{"type":"text","value":" to read more about the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useNetFlux"}]},{"type":"text","value":" or head to "},{"type":"element","tag":"a","props":{"href":"/documentation"},"children":[{"type":"text","value":"Documentation"}]},{"type":"text","value":" if you're ready to get started."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"why-did-i-make-this","depth":2,"text":"Why did I make this?","children":[{"id":"features","depth":3,"text":"Features"},{"id":"documentation","depth":3,"text":"Documentation"},{"id":"usenetflux-playground","depth":3,"text":"useNetFlux - Playground"},{"id":"quick-example","depth":3,"text":"Quick Example"}]}]}},"_type":"markdown","_id":"content:indexT.md","_source":"content","_file":"indexT.md","_stem":"indexT","_extension":"md"}],"navigation":[{"title":"useNetFlux Documentation","_path":"/documentation"},{"title":"Features","_path":"/features"},{"title":"useNetFlux","_path":"/indext"}]}